---
services:
  postgresql:
    image: postgres:17-alpine
    restart: unless-stopped
    hostname: ${POSTGRES_HOST}
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    hostname: ${REDIS_HOST}
    ports:
      - "6379:6379"
    command: redis-server --requirepass "${FSM_REDIS_PASS:-}"
    volumes:
      - ./data/redis_data:/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 3

  voicee_bot:
    container_name: voicee_bot
    hostname: voicee_bot
    restart: unless-stopped
    build: .
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgresql:
        condition: service_healthy
